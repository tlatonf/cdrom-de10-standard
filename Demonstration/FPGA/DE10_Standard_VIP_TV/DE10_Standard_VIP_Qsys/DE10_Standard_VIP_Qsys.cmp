	component DE10_Standard_VIP_Qsys is
		port (
			alt_vip_cl_cvi_0_clocked_video_vid_clk            : in    std_logic                     := 'X';             -- vid_clk
			alt_vip_cl_cvi_0_clocked_video_vid_data           : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- vid_data
			alt_vip_cl_cvi_0_clocked_video_vid_de             : in    std_logic                     := 'X';             -- vid_de
			alt_vip_cl_cvi_0_clocked_video_vid_datavalid      : in    std_logic                     := 'X';             -- vid_datavalid
			alt_vip_cl_cvi_0_clocked_video_vid_locked         : in    std_logic                     := 'X';             -- vid_locked
			alt_vip_cl_cvi_0_clocked_video_vid_f              : in    std_logic                     := 'X';             -- vid_f
			alt_vip_cl_cvi_0_clocked_video_vid_v_sync         : in    std_logic                     := 'X';             -- vid_v_sync
			alt_vip_cl_cvi_0_clocked_video_vid_h_sync         : in    std_logic                     := 'X';             -- vid_h_sync
			alt_vip_cl_cvi_0_clocked_video_vid_color_encoding : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- vid_color_encoding
			alt_vip_cl_cvi_0_clocked_video_vid_bit_width      : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- vid_bit_width
			alt_vip_cl_cvi_0_clocked_video_sof                : out   std_logic;                                        -- sof
			alt_vip_cl_cvi_0_clocked_video_sof_locked         : out   std_logic;                                        -- sof_locked
			alt_vip_cl_cvi_0_clocked_video_refclk_div         : out   std_logic;                                        -- refclk_div
			alt_vip_cl_cvi_0_clocked_video_clipping           : out   std_logic;                                        -- clipping
			alt_vip_cl_cvi_0_clocked_video_padding            : out   std_logic;                                        -- padding
			alt_vip_cl_cvi_0_clocked_video_overflow           : out   std_logic;                                        -- overflow
			alt_vip_itc_0_clocked_video_vid_clk               : in    std_logic                     := 'X';             -- vid_clk
			alt_vip_itc_0_clocked_video_vid_data              : out   std_logic_vector(23 downto 0);                    -- vid_data
			alt_vip_itc_0_clocked_video_underflow             : out   std_logic;                                        -- underflow
			alt_vip_itc_0_clocked_video_vid_datavalid         : out   std_logic;                                        -- vid_datavalid
			alt_vip_itc_0_clocked_video_vid_v_sync            : out   std_logic;                                        -- vid_v_sync
			alt_vip_itc_0_clocked_video_vid_h_sync            : out   std_logic;                                        -- vid_h_sync
			alt_vip_itc_0_clocked_video_vid_f                 : out   std_logic;                                        -- vid_f
			alt_vip_itc_0_clocked_video_vid_h                 : out   std_logic;                                        -- vid_h
			alt_vip_itc_0_clocked_video_vid_v                 : out   std_logic;                                        -- vid_v
			clk_clk                                           : in    std_logic                     := 'X';             -- clk
			clk_aud_clk                                       : out   std_logic;                                        -- clk
			clk_sdram_clk                                     : out   std_logic;                                        -- clk
			clk_vga_clk                                       : out   std_logic;                                        -- clk
			reset_reset_n                                     : in    std_logic                     := 'X';             -- reset_n
			sdram_wire_addr                                   : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba                                     : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n                                  : out   std_logic;                                        -- cas_n
			sdram_wire_cke                                    : out   std_logic;                                        -- cke
			sdram_wire_cs_n                                   : out   std_logic;                                        -- cs_n
			sdram_wire_dq                                     : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                                    : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_wire_ras_n                                  : out   std_logic;                                        -- ras_n
			sdram_wire_we_n                                   : out   std_logic                                         -- we_n
		);
	end component DE10_Standard_VIP_Qsys;

